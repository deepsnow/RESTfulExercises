
Oct 6, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

What makes an HTTP API more or less RESTful?

Here are some online sources that might help me to answer that question:

https://en.wikipedia.org/wiki/Representational_state_transfer
http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm
http://www.restapitutorial.com/lessons/whatisrest.html
http://www.restapitutorial.com/lessons/restquicktips.html
http://www.fullstackpython.com/api-creation.html
	http://www.narwhl.com/
		http://martinfowler.com/articles/richardsonMaturityModel.html
			"REST in Practice: Hypermedia and Systems Architecture"
			http://www.iana.org/assignments/link-relations/link-relations.xhtml
			http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven
	https://medium.com/@zwacky/design-a-beautiful-rest-api-901c73489458
http://www.infoq.com/articles/web-api-rest
	
Lance Buttars recommends: http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api
	"For API security I recommend using client based certificates. 
		http://security.stackexchange.com/questions/3605/certificate-based-authentication-vs-username-and-password-authentication
	If that is not a possibility another option is to use SCRAM which avoids the issue of having the API store the client hash so using scram you store a shared proof.
		https://tools.ietf.org/html/rfc5802
			The difficulty with using scram is no one is familiar with it so you end up writing client based code so people can generate the correct client proof.
	I am also not a big fan of OAuth
		http://hueniverse.com/2012/07/26/oauth-2-0-and-the-road-to-hell/"
	
See also:

http://www.fullstackpython.com/api-creation.html
https://jeffknupp.com/blog/2014/08/08/sandman-rebooted-create-a-rest-api-for-legacy-databases-without-writing-code/
	http://www.jeffknupp.com/blog/2014/07/15/your-databases-rest-api-sandman-one-year-later/ (notable comments on REST, HATEOAS, semantic gap, impedance mismatch)
		"It also fueled my interest in REST APIs, HATEOAS, and the semantic gap (all of which were the subject of other posts)."
		"This got me thinking more about web frameworks and the impedance mismatch between most web frameworks and RESTful API creation."
			See also his project called whizbang/omega: https://github.com/jeffknupp/omega
http://www.slashdb.com/
http://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
	
Initial, speculative answer:

My initial impression of more and lesser RESTful APIs is that, of the six REST constriants (client-server, stateless, cacheable, uniform interface, layered system, code-on-deman), the ones that are most often neglected (to one degree or another) are stateless, cacheable, and uniform interface. Some HTTP API's probably store state on the server between client requests, and so are not stateless. Some don't explicitly mark responses as cacheable or not. And some fail to provide the desired uniform interface by creating bad resource identifiers, failing to use links fully, etc. (See https://en.wikipedia.org/wiki/Representational_state_transfer#Uniform_interface.)


How can I adapt the default ASP.NET MVC app to display time log entries and allow the user to submit new ones?

	1- Add a new table to the embedded DB to store the entries. DONE
	2- Edit the home page to query for existing time log entries and allow for the addition of new ones.
		http://stackoverflow.com/questions/9815455/display-a-table-list-data-dynamically-in-mvc3-razor-from-a-jsonresult
	3- Make a Web API that will allow other apps to make time log entries.
		http://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
		

Oct 9, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

My HTML form's use of datetime-local input type is being converted by the browser (Chrome) to UTC.
	- Should I convert back to Eastern time?
		- How did AD's Net Acq job code achieve that?
	- the datetime-local type presents the user with a date picker widget, but the datetime type does not (in Chrome)
		The datetime type is removed in HTML5. The datetime-local is preferred in HTML5, but it's not yet supported in IE or Firefox: http://www.w3schools.com/html/html_form_input_types.asp
	
I've learned today that if you do

http://localhost:50249/api/Logs

in Chrome that Chrome will add request an XML response (because of the HTTP header "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8").
But, my python client gets a JSON response. That must be the default because my Python client does not specify an accept header.

See the "Adding a Model" section of http://www.asp.net/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api.

I've summed up my thoughts on REST in https://docs.google.com/presentation/d/1d1gKPsCupwUTx2z2vNad8lFDvsgPhYOmNmPUVJDm2jU/edit?usp=sharing.

Oct 16, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Here's the path to my new Python installation on my dev box.

C:\Users\doug\AppData\Local\Programs\Python\Python35\python.exe


Oct 23, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

OK, updated from origin to local repo on my personal dev box.


Oct 26, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

OK, today I'd like to add unit testing.
1- I've added SimpleInjector to two projects within the solution.
2- I've made a working test for HomeController, and verified that the test passes when it should pass and fails when it should fail, and that HomeController works as expected in production mode.

Oct 30, 2015
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Yesterday I started porting the LogsMvc CRUD operations to Home. (I successfully ported Index() and both Create()s.)

I'll continue that today. I've done Details(). I feel like I'll get the others (the two Edit()s and the two Deletes()s) in pretty short order.

I'm temped to attempt to subject the TimeLogService to unit testing, or integration testing.

	What did I read about that back on Oct 13th?
		https://msdn.microsoft.com/en-us/data/dn314429.aspx
		
Nov 2, 2013
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Does this post have offer any solutions for me?
	http://adventuresdotnet.blogspot.com/2011/03/mocking-static-methods-for-unit-testing.html
		That's good for mocking static methods, but not necessarily for extension methods.
		
OK, I've found a way to mock DbContext interactions, but the method only works if I use LINQ method syntax and not the declarative query syntax.
	See https://msdn.microsoft.com/en-us/library/bb397947(v=vs.120).aspx.
	
The technique is to wrapper the LINQ extension methods (the "standard query operators") in non-static interfaces and implementation classes. See today's commit.
I'm guessing that this technique will only take me so far. As the TimeLogService class grows more complex, the wrapper will be harder and harder to maintain.
Should I just stick to integration testing of the EF-specific code?

How can I do so if the database that I'm coding against is the one that's embedded within VS2013?
	I'm reading about localdb in https://msdn.microsoft.com/en-us/library/ms233817(v=vs.120).aspx.
	I think I can write integration tests against localdb as it is supposed to start-up and shut down on demand: http://blogs.msdn.com/b/sqlexpress/archive/2011/07/12/introducing-localdb-a-better-sql-express.aspx.
	

Nov 9, 2013
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

OK, I want to set up some integration tests for the TimeLogService class since I've determined that it's not worthwhile to cover it unit tests (as these reduce code clarity in an unacceptable way in EF-centric code).

Can I somehow employ the TimeLogging.Database class to automate the population of a test database?


Nov 10, 2013
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After much tinkering, I've succeeded with one "publish" operation from TimeLogging.Database to (localdb)\v11.0;Initial Catalog=TimeLogging. No data was altered.

I don't think that I can use the SSDT project TimeLogging.Database to facilitate integraiton testing of the EF-centric TimeLogService class.
Why not?
	See http://stackoverflow.com/questions/13881331/how-to-use-sql-server-database-project
	The topmost answer says:
		"Think of the source database (in your case, your database project) as being the "to be" state after deployment. When a deployment is initiated, the executable (SqlPackage.exe) compares the source with the target and generates a difference/delta script to make the target look like the source. This is why we no longer have to specify CREATE or ALTER; the tool figures it out."
	Since "publish" operation deploys the new or newly updated schema while saving all of the data, I can't use that.
	I have to have something that wipes out previous data, and inserts carefully chosen data that will support the integration tests.

Well, maybe there's a way to generate a publish profile that doesn't preserve the data?

	http://blogs.msdn.com/b/ssdt/archive/2012/02/02/including-data-in-an-sql-server-database-project.aspx shows how to populate seed data (or static data or domain data), but that's an extension of the "contract" implied by the schema
	Well, a similar page (http://www.wintellect.com/devcenter/rrobinson/how-to-include-and-deploy-data-using-a-visual-studio-database-project) persuades me that if I can load static, domain specific data I can load any data that I might need for my tests.
	
But how can I invoke the publish from my integration test suite?

	http://stackoverflow.com/questions/13881331/how-to-use-sql-server-database-project says that I can invoke SqlPackage.exe to perform a publish...
		But, that invocation requires me to pass the path to TimeLogging.Database.dacpac, and I would have to ensure that it was newly built...
			I've added a dependency from TimeLogging.IntegrationTests to TimeLogging.Database to address this.
	
It seems that I have three choices for SetUp in my Integration Tests:

	1- custom SQL scripts invoked through sqlcmd.exe (formerly osql.exe // see https://en.wikipedia.org/wiki/Microsoft_SQL_Server#SQLCMD).
	2- custom SQL scripts invoked through Script.PostDeployment.sql as part of TimeLogging.Database's publish operation (via SqlPackage.exe)
	3- custom C# code
	
I'm leaning toward (2) although I think it would be a kludge to differentiate between deployment for testing and deployment for production. Could I use SSDT project-defined SQLCMD variable to make that conditional?

Here are some links that I might want to review in more depth later on:
	http://dba.stackexchange.com/questions/64141/sql-server-projects-in-visual-studio-2013
	http://sqlbits.com/Sessions/Event10/Declarative_Database_Development_with_SSDT
	http://www.connectionstrings.com/
	http://www.codeproject.com/Articles/825831/SQL-Server-Database-Development-in-Visual-Studio (good screen shot of the compare tool in action?)
	
Note also that in order to get "publish" to work I had to target SQL Server 2012 in TimeLogging.Database because that's what I'm targeting in TimeLogging's web.config. (Is that what v11.0 means?)

